# Реализовать класс Matrix (матрица).
# Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
# который должен принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно —
# первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.

class Matrix:
    def __init__(self, list):
        self.list = list

    def __str__(self):
        return f'{self.list[0][0]} {self.list[0][1]}\n{self.list[1][0]} {self.list[1][1]}\n' \
               f'{self.list[2][0]} {self.list[2][1]}\n'

    def __add__(self, other):
        new_matrix = []
        new_matrix.append([i + k for i, k in zip(self.list[0], other[0])])
        new_matrix.append([i + k for i, k in zip(self.list[1], other[1])])
        new_matrix.append([i + k for i, k in zip(self.list[2], other[2])])
        return new_matrix

matrix_1 = Matrix([[1, 2], [2, 3], [3, 4]])
matrix_2 = Matrix([[3, 8], [4, 9], [5, 6]])
matrix_3 = Matrix(matrix_1 + matrix_2.list)

print(matrix_1)
print(matrix_2)
print(matrix_3)
